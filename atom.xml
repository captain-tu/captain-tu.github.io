<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sailor Sinbad</title>
  
  <subtitle>Sinbad</subtitle>
  <link href="https://captain-tu.github.io/atom.xml" rel="self"/>
  
  <link href="https://captain-tu.github.io/"/>
  <updated>2022-05-14T15:02:15.187Z</updated>
  <id>https://captain-tu.github.io/</id>
  
  <author>
    <name>Sinbad</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XXL-JOB 分布式JOB调度平台 接入集成</title>
    <link href="https://captain-tu.github.io/2022/07/01/xxl-job/01-xxl-job-jie-ru-ji-cheng/"/>
    <id>https://captain-tu.github.io/2022/07/01/xxl-job/01-xxl-job-jie-ru-ji-cheng/</id>
    <published>2022-06-30T16:00:00.000Z</published>
    <updated>2022-05-14T15:02:15.187Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;XXL-JOB是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
        
      
    
    
    
    <category term="XXL-JOB" scheme="https://captain-tu.github.io/categories/XXL-JOB/"/>
    
    
  </entry>
  
  <entry>
    <title>XXL-JOB 分布式JOB调度平台 介绍</title>
    <link href="https://captain-tu.github.io/2022/06/30/xxl-job/01-xxl-job-jie-shao/"/>
    <id>https://captain-tu.github.io/2022/06/30/xxl-job/01-xxl-job-jie-shao/</id>
    <published>2022-06-29T16:00:00.000Z</published>
    <updated>2022-05-14T15:02:12.967Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;XXL-JOB是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
        
      
    
    
    
    <category term="XXL-JOB" scheme="https://captain-tu.github.io/categories/XXL-JOB/"/>
    
    
  </entry>
  
  <entry>
    <title>Nacos 服务注册发现和配置</title>
    <link href="https://captain-tu.github.io/2022/06/15/alibaba/nacos/01-nacos-jie-shao-he-jian-dan-ying-yong/"/>
    <id>https://captain-tu.github.io/2022/06/15/alibaba/nacos/01-nacos-jie-shao-he-jian-dan-ying-yong/</id>
    <published>2022-06-14T16:00:00.000Z</published>
    <updated>2022-05-09T13:50:34.610Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Nacos 致力于帮助您发现、配置和管理微服务。Nacos</summary>
        
      
    
    
    
    <category term="Nacos" scheme="https://captain-tu.github.io/categories/Nacos/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring Cloud Gateway 介绍</title>
    <link href="https://captain-tu.github.io/2022/06/01/spring/cloud/01-springcloud-gateway/"/>
    <id>https://captain-tu.github.io/2022/06/01/spring/cloud/01-springcloud-gateway/</id>
    <published>2022-05-31T16:00:00.000Z</published>
    <updated>2022-05-09T13:43:12.060Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要内容为 Spring 生态系统之上的 API 网关的基础知识，该项目包括: Spring 5、 Spring Boot 2 和 Project Reactor。Spring Cloud Gateway 旨在提供一种简单而有效的方法来路由到</summary>
        
      
    
    
    
    <category term="Spring Cloud" scheme="https://captain-tu.github.io/categories/Spring-Cloud/"/>
    
    
  </entry>
  
  <entry>
    <title>Sentinel 限流集成和上线改造</title>
    <link href="https://captain-tu.github.io/2022/05/01/alibaba/sentinel/02-sentinel-xian-liu-ji-cheng-fang-an-he-shang-xian-gai-zao/"/>
    <id>https://captain-tu.github.io/2022/05/01/alibaba/sentinel/02-sentinel-xian-liu-ji-cheng-fang-an-he-shang-xian-gai-zao/</id>
    <published>2022-04-30T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:51.998Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要内容为项目集成Sentinel进行限流降级的解决方案和上线改造内容。通过对Sentinel的控制台进行深度改造和集成，可以使项目内所有微服务的资源规则能够动态的修改和新增，各个服务可以及时监听并更新规则。本文改造方案基于Nacos配置中心进</summary>
        
      
    
    
    
    <category term="Sentinel" scheme="https://captain-tu.github.io/categories/Sentinel/"/>
    
    
  </entry>
  
  <entry>
    <title>Sentinel 高可用流量控制组件</title>
    <link href="https://captain-tu.github.io/2022/04/30/alibaba/sentinel/01-sentinel-gao-ke-yong-liu-liang-kong-zhi-zu-jian/"/>
    <id>https://captain-tu.github.io/2022/04/30/alibaba/sentinel/01-sentinel-gao-ke-yong-liu-liang-kong-zhi-zu-jian/</id>
    <published>2022-04-29T16:00:00.000Z</published>
    <updated>2022-05-12T14:36:05.273Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;随着微服务的流行，服务和服务之间的稳定性变得越来越重要。Sentinel</summary>
        
      
    
    
    
    <category term="Sentinel" scheme="https://captain-tu.github.io/categories/Sentinel/"/>
    
    
  </entry>
  
  <entry>
    <title>MongoDB 使用问题记录</title>
    <link href="https://captain-tu.github.io/2022/04/23/mongodb/mongodb-wen-ti-ji-lu/"/>
    <id>https://captain-tu.github.io/2022/04/23/mongodb/mongodb-wen-ti-ji-lu/</id>
    <published>2022-04-22T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:52.040Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要记录在项目当中集成&lt;code&gt;MongoDB&lt;/code&gt;作为日志存储库时遇到的一些问题。本文将会是一个关于&lt;code&gt;MongoDB&lt;/code&gt;使用的笼统记载，因为这也是作者第一次在项目当中集成&lt;code&gt;MongoDB&lt;/code&gt;，</summary>
        
      
    
    
    
    <category term="MongoDB" scheme="https://captain-tu.github.io/categories/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>Java中的泛型 详解</title>
    <link href="https://captain-tu.github.io/2022/04/02/java/generics/01-java-zhong-de-fan-xing/"/>
    <id>https://captain-tu.github.io/2022/04/02/java/generics/01-java-zhong-de-fan-xing/</id>
    <published>2022-04-01T16:00:00.000Z</published>
    <updated>2022-05-12T13:59:46.484Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;ava 泛型（generics）是 JDK 5 中引入的一个新特性,</summary>
        
      
    
    
    
    <category term="Java" scheme="https://captain-tu.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>MongoDB 权威指南</title>
    <link href="https://captain-tu.github.io/2022/04/01/mongodb/mongodb-quan-wei-zhi-nan/"/>
    <id>https://captain-tu.github.io/2022/04/01/mongodb/mongodb-quan-wei-zhi-nan/</id>
    <published>2022-03-31T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:52.036Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要内容为&lt;code&gt;《MongoDB权威指南》&lt;/code&gt;学习整理记录。涉及MongoDB数据库，集合，文档，数据类型等基础知识，以及MongoDB的应用、运维和优化等。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
        
      
    
    
    
    <category term="MongoDB" scheme="https://captain-tu.github.io/categories/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>Java中的反射 详解</title>
    <link href="https://captain-tu.github.io/2022/04/01/java/reflect/01-java-zhong-de-fan-she/"/>
    <id>https://captain-tu.github.io/2022/04/01/java/reflect/01-java-zhong-de-fan-she/</id>
    <published>2022-03-31T16:00:00.000Z</published>
    <updated>2022-05-12T13:59:04.142Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Java反射就是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性；并且能改变它的属性。而这也是Java被视为动态（或准动态，为啥要说是准动态，因为一般而言的动态语言定义是程序运行时，允许</summary>
        
      
    
    
    
    <category term="Java" scheme="https://captain-tu.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>分布式高性能可定制化统一发号器</title>
    <link href="https://captain-tu.github.io/2022/02/15/distribute/01-tong-yi-fa-hao-qi/"/>
    <id>https://captain-tu.github.io/2022/02/15/distribute/01-tong-yi-fa-hao-qi/</id>
    <published>2022-02-14T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:52.009Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文内容主要涉及可定制化的统一发号器的解决方案及实现过程。统一发号器的方案前提是必须满足业务需求，支持定制化，同时需要满足分布式高性能的要求。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
        
      
    
    
    
    <category term="Distribute" scheme="https://captain-tu.github.io/categories/Distribute/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring核心 MVC请求流程</title>
    <link href="https://captain-tu.github.io/2022/02/03/spring/framework/03-spring-he-xin-xi-lie-san-mvc-qing-qiu-liu-cheng/"/>
    <id>https://captain-tu.github.io/2022/02/03/spring/framework/03-spring-he-xin-xi-lie-san-mvc-qing-qiu-liu-cheng/</id>
    <published>2022-02-02T16:00:00.000Z</published>
    <updated>2022-05-14T15:00:30.230Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Spring MVC 是 Spring 在 Spring Container Core 和 AOP 等技术基础上，遵循 Web MVC 的规范推出的 Web 开发框架，目的是为了简化 Java 栈的 Web</summary>
        
      
    
    
    
    <category term="Spring Framework" scheme="https://captain-tu.github.io/categories/Spring-Framework/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring 核心 面向切面编程</title>
    <link href="https://captain-tu.github.io/2022/02/02/spring/framework/02-spring-he-xin-xi-lie-er-qie-mian-bian-cheng/"/>
    <id>https://captain-tu.github.io/2022/02/02/spring/framework/02-spring-he-xin-xi-lie-er-qie-mian-bian-cheng/</id>
    <published>2022-02-01T16:00:00.000Z</published>
    <updated>2022-05-15T08:38:42.519Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;面向切面编程（&lt;code&gt;AOP—Aspect Oriented</summary>
        
      
    
    
    
    <category term="Spring Framework" scheme="https://captain-tu.github.io/categories/Spring-Framework/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring核心 控制反转</title>
    <link href="https://captain-tu.github.io/2022/02/01/spring/framework/01-spring-he-xin-xi-lie-yi-kong-zhi-fan-zhuan/"/>
    <id>https://captain-tu.github.io/2022/02/01/spring/framework/01-spring-he-xin-xi-lie-yi-kong-zhi-fan-zhuan/</id>
    <published>2022-01-31T16:00:00.000Z</published>
    <updated>2022-05-14T15:00:17.525Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;控制反转&lt;/strong&gt;（&lt;code&gt;Ioc&lt;/code&gt;—&lt;code&gt;Inversion of</summary>
        
      
    
    
    
    <category term="Spring Framework" scheme="https://captain-tu.github.io/categories/Spring-Framework/"/>
    
    
  </entry>
  
  <entry>
    <title>Java 并发编程的艺术（五）（Java中的锁）</title>
    <link href="https://captain-tu.github.io/2022/01/11/the-art-of-java-concurrency-programming/5-bing-fa-bian-cheng-de-yi-zhu-java-zhong-de-suo/"/>
    <id>https://captain-tu.github.io/2022/01/11/the-art-of-java-concurrency-programming/5-bing-fa-bian-cheng-de-yi-zhu-java-zhong-de-suo/</id>
    <published>2022-01-10T16:00:00.000Z</published>
    <updated>2022-05-09T12:46:24.396Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文为&lt;strong&gt;《Java</summary>
        
      
    
    
    
    <category term="Java Concurrency" scheme="https://captain-tu.github.io/categories/Java-Concurrency/"/>
    
    
  </entry>
  
  <entry>
    <title>Java 并发编程的艺术（四）（Java并发编程基础）</title>
    <link href="https://captain-tu.github.io/2022/01/10/the-art-of-java-concurrency-programming/4-bing-fa-bian-cheng-de-yi-zhu-java-bing-fa-bian-cheng-ji-chu/"/>
    <id>https://captain-tu.github.io/2022/01/10/the-art-of-java-concurrency-programming/4-bing-fa-bian-cheng-de-yi-zhu-java-bing-fa-bian-cheng-ji-chu/</id>
    <published>2022-01-09T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:52.079Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文为&lt;strong&gt;《Java</summary>
        
      
    
    
    
    <category term="Java Concurrency" scheme="https://captain-tu.github.io/categories/Java-Concurrency/"/>
    
    
  </entry>
  
  <entry>
    <title>Java 并发编程的艺术（三）（Java内存模型二）</title>
    <link href="https://captain-tu.github.io/2022/01/09/the-art-of-java-concurrency-programming/3-bing-fa-bian-cheng-de-yi-zhu-java-nei-cun-mo-xing-2/"/>
    <id>https://captain-tu.github.io/2022/01/09/the-art-of-java-concurrency-programming/3-bing-fa-bian-cheng-de-yi-zhu-java-nei-cun-mo-xing-2/</id>
    <published>2022-01-08T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:52.075Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文为&lt;strong&gt;《Java</summary>
        
      
    
    
    
    <category term="Java Concurrency" scheme="https://captain-tu.github.io/categories/Java-Concurrency/"/>
    
    
  </entry>
  
  <entry>
    <title>Java 并发编程的艺术（三）（Java内存模型一）</title>
    <link href="https://captain-tu.github.io/2022/01/08/the-art-of-java-concurrency-programming/3-bing-fa-bian-cheng-de-yi-zhu-java-nei-cun-mo-xing-1/"/>
    <id>https://captain-tu.github.io/2022/01/08/the-art-of-java-concurrency-programming/3-bing-fa-bian-cheng-de-yi-zhu-java-nei-cun-mo-xing-1/</id>
    <published>2022-01-07T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:52.069Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文为&lt;strong&gt;《Java</summary>
        
      
    
    
    
    <category term="Java Concurrency" scheme="https://captain-tu.github.io/categories/Java-Concurrency/"/>
    
    
  </entry>
  
  <entry>
    <title>Java 并发编程的艺术（二）（并发机制的底层实现）</title>
    <link href="https://captain-tu.github.io/2022/01/07/the-art-of-java-concurrency-programming/2-bing-fa-bian-cheng-de-yi-zhu-java-bing-fa-ji-zhi-de-di-ceng-shi-xian/"/>
    <id>https://captain-tu.github.io/2022/01/07/the-art-of-java-concurrency-programming/2-bing-fa-bian-cheng-de-yi-zhu-java-bing-fa-ji-zhi-de-di-ceng-shi-xian/</id>
    <published>2022-01-06T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:52.062Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文为&lt;strong&gt;《Java</summary>
        
      
    
    
    
    <category term="Java Concurrency" scheme="https://captain-tu.github.io/categories/Java-Concurrency/"/>
    
    
  </entry>
  
  <entry>
    <title>Java 并发编程的艺术（一）（并发编程的挑战）</title>
    <link href="https://captain-tu.github.io/2022/01/06/the-art-of-java-concurrency-programming/1-bing-fa-bian-cheng-de-yi-zhu-bing-fa-bian-cheng-de-tiao-zhan/"/>
    <id>https://captain-tu.github.io/2022/01/06/the-art-of-java-concurrency-programming/1-bing-fa-bian-cheng-de-yi-zhu-bing-fa-bian-cheng-de-tiao-zhan/</id>
    <published>2022-01-05T16:00:00.000Z</published>
    <updated>2022-05-07T11:26:52.055Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文为&lt;strong&gt;《Java</summary>
        
      
    
    
    
    <category term="Java Concurrency" scheme="https://captain-tu.github.io/categories/Java-Concurrency/"/>
    
    
  </entry>
  
</feed>
