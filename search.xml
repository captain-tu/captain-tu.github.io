<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Sentinel 限流集成和上线改造</title>
      <link href="/2022/05/01/alibaba/sentinel/sentinel-xian-liu-ji-cheng-fang-an-he-shang-xian-gai-zao/"/>
      <url>/2022/05/01/alibaba/sentinel/sentinel-xian-liu-ji-cheng-fang-an-he-shang-xian-gai-zao/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文主要内容为项目集成Sentinel进行限流降级的解决方案和上线改造内容。通过对Sentinel的控制台进行深度改造和集成，可以使项目内所有微服务的资源规则能够动态的修改和新增，各个服务可以及时监听并更新规则。本文改造方案基于Nacos配置中心进行规则的持久化，对各个微服务来说是底侵入性的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Sentinel </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Sentinel 高可用流量控制组件</title>
      <link href="/2022/04/30/alibaba/sentinel/01-sentinel-he-xin-zheng-li/"/>
      <url>/2022/04/30/alibaba/sentinel/01-sentinel-he-xin-zheng-li/</url>
      
        <content type="html"><![CDATA[<blockquote><p>随着微服务的流行，服务和服务之间的稳定性变得越来越重要。Sentinel 是面向分布式服务架构的流量控制组件，主要以流量为切入点，从限流、流量整形、熔断降级、系统负载保护、热点防护等多个维度来帮助开发者保障微服务的稳定性。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Sentinel </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB 使用问题记录</title>
      <link href="/2022/04/23/mongodb/mongodb-wen-ti-ji-lu/"/>
      <url>/2022/04/23/mongodb/mongodb-wen-ti-ji-lu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文主要记录在项目当中集成<code>MongoDB</code>作为日志存储库时遇到的一些问题。本文将会是一个关于<code>MongoDB</code>使用的笼统记载，因为这也是作者第一次在项目当中集成<code>MongoDB</code>，针对许多问题并不全面了解，这里只能对在使用过程中遇到的一些零碎问题进行记录。</p></blockquote><h2 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h2><p>关于<code>MongoDB</code>更多技术及概念知识，可前往官方文档进行学习。<br>1、<a href="https://www.mongodb.com/">MongoDB 官网</a><br>2、<a href="https://www.mongodb.org.cn/">MongoDB 中文网</a></p><h2 id="MomgoDB-分页查询跳页过大导致查询失败"><a href="#MomgoDB-分页查询跳页过大导致查询失败" class="headerlink" title="MomgoDB 分页查询跳页过大导致查询失败"></a>MomgoDB 分页查询跳页过大导致查询失败</h2><p>默认缓存大小32MB</p><h2 id="Spring-Data-MongoDB-接入"><a href="#Spring-Data-MongoDB-接入" class="headerlink" title="Spring Data MongoDB 接入"></a>Spring Data MongoDB 接入</h2><h3 id="Spring-MongoDB-配置密码问题"><a href="#Spring-MongoDB-配置密码问题" class="headerlink" title="Spring MongoDB 配置密码问题"></a>Spring MongoDB 配置密码问题</h3><p>密码中含有特殊字符编码问题</p><h3 id="Spring-MongoDB-分页工具封装"><a href="#Spring-MongoDB-分页工具封装" class="headerlink" title="Spring MongoDB 分页工具封装"></a>Spring MongoDB 分页工具封装</h3><p>分页工具封装</p><h3 id="Spring-MongoDB-查询条件封装"><a href="#Spring-MongoDB-查询条件封装" class="headerlink" title="Spring MongoDB 查询条件封装"></a>Spring MongoDB 查询条件封装</h3><p>查询条件</p><h3 id="Spring-MongoDB-聚合分组查询"><a href="#Spring-MongoDB-聚合分组查询" class="headerlink" title="Spring MongoDB 聚合分组查询"></a>Spring MongoDB 聚合分组查询</h3><p>聚合分组</p>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB 权威指南</title>
      <link href="/2022/04/01/mongodb/mongodb-quan-wei-zhi-nan/"/>
      <url>/2022/04/01/mongodb/mongodb-quan-wei-zhi-nan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文主要内容为<code>《MongoDB权威指南》</code>学习整理记录。涉及MongoDB数据库，集合，文档，数据类型等基础知识，以及MongoDB的应用、运维和优化等。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>分布式高性能可定制化统一发号器</title>
      <link href="/2022/02/15/distribute/01-tong-yi-fa-hao-qi/"/>
      <url>/2022/02/15/distribute/01-tong-yi-fa-hao-qi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文内容主要涉及可定制化的统一发号器的解决方案及实现过程。统一发号器的方案前提是必须满足业务需求，支持定制化，同时需要满足分布式高性能的要求。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Distribute </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 并发编程的艺术（四）（Java并发编程基础）</title>
      <link href="/2022/01/10/the-art-of-java-concurrency-programming/4-bing-fa-bian-cheng-de-yi-zhu-java-bing-fa-bian-cheng-ji-chu/"/>
      <url>/2022/01/10/the-art-of-java-concurrency-programming/4-bing-fa-bian-cheng-de-yi-zhu-java-bing-fa-bian-cheng-ji-chu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为<strong>《Java 并发编程的艺术》</strong>阅读笔记四，主要内容为Java并发编程的基础知识，包括<code>线程的启动</code>、<code>线程间的通信</code>以及简单的<code>线程池</code>示例和应用等内容。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java Concurrency </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 并发编程的艺术（三）（Java内存模型二）</title>
      <link href="/2022/01/09/the-art-of-java-concurrency-programming/3-bing-fa-bian-cheng-de-yi-zhu-java-nei-cun-mo-xing-2/"/>
      <url>/2022/01/09/the-art-of-java-concurrency-programming/3-bing-fa-bian-cheng-de-yi-zhu-java-nei-cun-mo-xing-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为<strong>《Java 并发编程的艺术》</strong>阅读笔记三，分为上下两部分。主要内容为Java内存模型，分别从<code>volatile</code>、<code>synchronized</code>、<code>原子操作的实现原理</code>三个方面Java并发编程的底层机制。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java Concurrency </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 并发编程的艺术（三）（Java内存模型一）</title>
      <link href="/2022/01/08/the-art-of-java-concurrency-programming/3-bing-fa-bian-cheng-de-yi-zhu-java-nei-cun-mo-xing-1/"/>
      <url>/2022/01/08/the-art-of-java-concurrency-programming/3-bing-fa-bian-cheng-de-yi-zhu-java-nei-cun-mo-xing-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为<strong>《Java 并发编程的艺术》</strong>阅读笔记三，分为上下两部分。主要内容为Java内存模型，分别从<code>volatile</code>、<code>synchronized</code>、<code>原子操作的实现原理</code>三个方面Java并发编程的底层机制。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java Concurrency </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 并发编程的艺术（二）（并发机制的底层实现）</title>
      <link href="/2022/01/07/the-art-of-java-concurrency-programming/2-bing-fa-bian-cheng-de-yi-zhu-java-bing-fa-ji-zhi-de-di-ceng-shi-xian/"/>
      <url>/2022/01/07/the-art-of-java-concurrency-programming/2-bing-fa-bian-cheng-de-yi-zhu-java-bing-fa-ji-zhi-de-di-ceng-shi-xian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为<strong>《Java 并发编程的艺术》</strong>阅读笔记二，主要内容为Java并发编程的底层机制，分别从<code>volatile</code>、<code>synchronized</code>、<code>原子操作的实现原理</code>三个方面Java并发编程的底层机制。</p></blockquote><h2 id="volatial的应用"><a href="#volatial的应用" class="headerlink" title="volatial的应用"></a>volatial的应用</h2><h3 id="volatial的定义及实现原理"><a href="#volatial的定义及实现原理" class="headerlink" title="volatial的定义及实现原理"></a>volatial的定义及实现原理</h3><p><code>volatile</code>是Java提供的一种轻量级的同步机制。Java语言包含两种内在的同步机制：同步块（或方法）和 <code>volatile</code> 变量，相比于<code>synchronized</code>（<code>synchronized</code>通常称为重量级锁），<code>volatile</code>更轻量级，因为它不会引起线程上下文的切换和调度。但是<code>volatile</code>变量的同步性较差（有时它更简单并且开销更低），而且其使用也更容易出错。</p><p>如果一个字段被声明为<code>volatile</code>变量，Java线程内存模型确保所有线程看到这个变量的值是一致的。</p><p>若一个字段被定义为<code>volatile</code>：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token comment">// instance 是volatile变量</span>instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>转换成为汇编指令后：</p><pre class="language-asm" data-language="asm"><code class="language-asm">0x01a3de1d: movb $0 X 0, 0 X 1104800(%esi);0x01a3de24: lock addl $0 X 0, (%esp);</code></pre><p>有<code>volatile</code>变量修饰的共享变量在进行写操作时会多出第二行汇编代码，<code>Lock</code>前缀的指令在多核处理器下会做两件事情：</p><ul><li><strong>将当前处理器缓存行的数据写回到系统内存</strong></li><li><strong>写回内存的操作会使在其它CPU里缓存了该内存地址的数据无效</strong></li></ul><p><code>Lock</code>前缀指令实际上相当于一个内存屏障（<code>Memory Barriers</code>），确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，也不会把前面的指令排到内存屏障的后面；即在执行到内存屏障这句指令时，在它前面的操作已经全部完成。</p><p>注：<code>内存屏障</code>（<code>Memory Barriers</code>）</p><h3 id="volatial变量的特性"><a href="#volatial变量的特性" class="headerlink" title="volatial变量的特性"></a>volatial变量的特性</h3><p>1、保证共享变量的可见性，但不保证原子性。<br>2、禁止指令重排序：执行到<code>volatile</code>变量时，其前面的所有语句都执行完，后面所有语句都未执行。</p><p>注：<code>指令重排序</code></p><h3 id="volatial的优化及使用场景"><a href="#volatial的优化及使用场景" class="headerlink" title="volatial的优化及使用场景"></a>volatial的优化及使用场景</h3><p>优化：使用<strong>追加字节</strong>的方式将队列的<code>头尾节点</code>追加至合适字宽的缓存行，例如<code>Core Solo</code>和<code>Pentium M</code>处理器的缓存行为<code>64字宽</code>，不支持部分填充填充缓存行。这种情况有可能导致，在队列的头节点和尾节点都不足<code>64字宽</code>的时候，处理器会将他们都读到同一个高速<code>缓存行</code>，在多处理器下每个处理器都会在自己的高速缓存中缓存同样的头节点和尾节点。当一个处理器试图修改头节点时，会将当整个缓存行锁定（<code>缓存行锁定</code>），在<code>缓存一致性</code>作用下，其它处理器也就不能访问自己缓存中的尾节点。这将严重影响队列的入队和出队效率。</p><p>注：<code>缓存行</code><br>注：<code>缓存一致性</code></p><p>使用场景：首先针对<code>复合操作</code>，<code>volatile</code>是不适用的，因为其只保证了可见性而不保证原子性。例如当对<code>volatile</code>变量进行自增这样的复合操作时，会得到想象之外的结果，如下对<code>volatile</code>变量<code>count</code>进行自增操作，正常结果应该会是<code>10000</code>，但是每次运行结果都会不一致。</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        count<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">final</span> <span class="token class-name">Test</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token annotation punctuation">@Override</span>                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        test<span class="token punctuation">.</span><span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">activeCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>运行结果可能是<code>9939</code>，<code>9829</code>等，原因在于<code>自增操作++</code>属于<code>复合操作</code>，其分解后总共包含三个操作：</p><ul><li>读取count的值</li><li>将读取到的count进行加1操作</li><li>将加1操作后的值赋给count变量地址</li></ul><p>在该过程中，<code>volatile</code>的作用便是只保证了第一步对所有线程而言都是顺序执行，但是当其中一个线程第一步拿到最新的值进行后面两个操作时，此时其它线程写入新的<code>count</code>值，那么这个线程拿到的<code>count</code>值就不是最新的，其结果便是导致最后结果<code>count</code>变量值低于预期值。</p><h2 id="synchronized的应用"><a href="#synchronized的应用" class="headerlink" title="synchronized的应用"></a>synchronized的应用</h2><h3 id="Java对象头"><a href="#Java对象头" class="headerlink" title="Java对象头"></a>Java对象头</h3><h3 id="锁的升级和对比"><a href="#锁的升级和对比" class="headerlink" title="锁的升级和对比"></a>锁的升级和对比</h3><h2 id="原子操作的实现原理"><a href="#原子操作的实现原理" class="headerlink" title="原子操作的实现原理"></a>原子操作的实现原理</h2>]]></content>
      
      
      <categories>
          
          <category> Java Concurrency </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 并发编程的艺术（一）（并发编程的挑战）</title>
      <link href="/2022/01/06/the-art-of-java-concurrency-programming/1-bing-fa-bian-cheng-de-yi-zhu-bing-fa-bian-cheng-de-tiao-zhan/"/>
      <url>/2022/01/06/the-art-of-java-concurrency-programming/1-bing-fa-bian-cheng-de-yi-zhu-bing-fa-bian-cheng-de-tiao-zhan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为<strong>《Java 并发编程的艺术》</strong>阅读笔记一，主要内容为并发编程的挑战，分别从<code>上下文切换</code>、<code>死锁</code>、<code>资源限制</code>三个方面说明在运用并发编程时可能遇到的一些挑战和瓶颈，并提纲一些可靠的解决方案。</p></blockquote><h2 id="并发编程的挑战"><a href="#并发编程的挑战" class="headerlink" title="并发编程的挑战"></a>并发编程的挑战</h2><h3 id="1-1-上下文切换"><a href="#1-1-上下文切换" class="headerlink" title="1.1 上下文切换"></a>1.1 上下文切换</h3><p><code>上下文切换</code>：CPU通过给每个线程分配<code>时间片</code>来实现多线程执行代码，当前线程执行一个时间片后会切换到下一个线程，切换前会保存该线程的状态信息，切换回来时会加载该线程的状态信息。任务从保存到再加载的过程就是一次<code>上下文切换</code>。</p><h4 id="1-1-1-多线程一定快吗"><a href="#1-1-1-多线程一定快吗" class="headerlink" title="1.1.1 多线程一定快吗"></a>1.1.1 多线程一定快吗</h4><p>线程存在创建和上下文切换的开销</p><h4 id="1-1-2-测试上下文切换次数和时长"><a href="#1-1-2-测试上下文切换次数和时长" class="headerlink" title="1.1.2 测试上下文切换次数和时长"></a>1.1.2 测试上下文切换次数和时长</h4><h4 id="1-1-3-如何减少切换上下文"><a href="#1-1-3-如何减少切换上下文" class="headerlink" title="1.1.3 如何减少切换上下文"></a>1.1.3 如何减少切换上下文</h4><ul><li>无锁并发编程</li><li>CAS算法</li><li>使用最少线程</li><li>使用协程</li></ul><h4 id="1-1-4-减少切换上下文切换实战"><a href="#1-1-4-减少切换上下文切换实战" class="headerlink" title="1.1.4 减少切换上下文切换实战"></a>1.1.4 减少切换上下文切换实战</h4><h3 id="1-2-死锁"><a href="#1-2-死锁" class="headerlink" title="1.2 死锁"></a>1.2 死锁</h3><p><code>死锁</code>：所谓<code>死锁</code>是指两个或两个以上的线程在执行过程中，因<code>争夺资源</code>而造成的一种<code>互相等待</code>的现象，若无外力作用，它们都将无法推进下去。</p><ul><li>避免一个线程同时获得多个锁</li><li>避免一个线程在锁内同时占用多个资源</li><li>尝试使用定时锁</li><li>对于数据库锁，加锁和解锁必须在同一个数据库里操作</li></ul><h3 id="1-3-资源限制"><a href="#1-3-资源限制" class="headerlink" title="1.3 资源限制"></a>1.3 资源限制</h3><ul><li>硬件资源</li><li>软件资源</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java Concurrency </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 并发编程的艺术（〇）（概览）</title>
      <link href="/2022/01/05/the-art-of-java-concurrency-programming/0-bing-fa-bian-cheng-de-yi-zhu-gai-lan/"/>
      <url>/2022/01/05/the-art-of-java-concurrency-programming/0-bing-fa-bian-cheng-de-yi-zhu-gai-lan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为<strong>《Java 并发编程的艺术》</strong>阅读笔记〇，主要涉及内容为该书内容的大致概括和梳理，并为后续的阅读笔记起一个总领提纲，方便以后在本文中按照提纲进行总结。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java Concurrency </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Matery 建站</title>
      <link href="/2022/01/02/hexo-matery/"/>
      <url>/2022/01/02/hexo-matery/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文主要内容为<code>Hexo</code>博客主题<code>Matery</code>在本网站的一些使用情况和改动，<strong>作者</strong>将对本网站的建立过程进行记录，记录内容主要涵盖<strong>主题原作者</strong>的博客使用<code>Hexo</code>的介绍内容及基本配置，另外也会记录<strong>作者</strong>在原基础上所作的一些改动和遇到的一些问题。</p></blockquote><h2 id="Hexo-博客模板"><a href="#Hexo-博客模板" class="headerlink" title="Hexo 博客模板"></a>Hexo 博客模板</h2><p>前端开发环境搭建需要安装NodeJS环境，安装Vue脚手架，更多相关开发工具：Git、VSCode等，对于本网站的搭建同样不可缺少，本文不再对环境搭建过程赘述。</p><ul><li>1、下载hexo-cli： <code>npm install -g hexo-cli</code></li><li>2、初始化blog： <code>hexo init &lt;folder&gt;</code></li><li>3、进入blog目录： <code>cd &lt;folder&gt;</code></li><li>4、下载依赖： <code>npm install</code></li><li>5、生成静态文件并部署： <code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s -p 8080</code></li><li>6、访问博客： <code>http://localhost:8080</code></li></ul><p><img src="/images/hexo/Hexo%E5%88%9D%E5%A7%8B%E5%8C%96.png"></p><h2 id="Hexo-目录文件"><a href="#Hexo-目录文件" class="headerlink" title="Hexo 目录文件"></a>Hexo 目录文件</h2><ul><li>1、<code>node_modules</code>：# 依赖包</li><li>2、<code>public</code>：# 存放被解析markdown、html文件</li><li>3、<code>scaffolds</code>：# 当您新建文章时，根据scaffold生成文件</li><li>4、<code>source</code>：# 资源文件夹</li><li>5、<code>source/_posts</code>：# 博客文章目录</li><li>6、<code>themes</code>：# 主题</li><li>7、<code>_config.yml</code>：# 网站的配置信息。标题、网站名称等</li><li>8、<code>db.json</code>：# source解析所得到的</li><li>9、<code>package.json</code>：# 应用程序的配置信息</li></ul><h2 id="Matery-主题模板"><a href="#Matery-主题模板" class="headerlink" title="Matery 主题模板"></a>Matery 主题模板</h2><p>两种方式获取：</p><ul><li>下载 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">Matery</a> 博客主题文件复制到博客目录theme中。</li><li>在theme下执行命令： <code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code></li></ul><p>下载Matery主题文件存放在博客目录的theme文件夹中，至此，目录内将会有两个配置文件，一个是Hexo博客根目录的配置文件<code>_config.yml</code>，一个是Matery主题文件夹中的配置文件<code>_config.yml</code>，需要注意区分。</p><h3 id="Matery-主题配置"><a href="#Matery-主题配置" class="headerlink" title="Matery 主题配置"></a>Matery 主题配置</h3><p>修改Hexo根目录下的配置文件<code>_config.yml</code>，将<code>theme</code>设置为<code>hexo-theme-matery</code>。</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery</code></pre><p><img src="/images/hexo/Hexo-Home.png"><br><img src="/images/hexo/Hexo-Matery.png"></p><h3 id="Matery-建议配置"><a href="#Matery-建议配置" class="headerlink" title="Matery 建议配置"></a>Matery 建议配置</h3><ul><li>修改根目录<code>_config.yml</code>文件<code>url</code>值为网站发布域名，如<code>https://xxx.gitee.io</code>。</li><li>修改根目录<code>_config.yml</code>文件<code>per_page</code>值为<code>6</code>的倍数，如<code>6</code>，<code>12</code>等。</li><li>修改根目录<code>_config.yml</code>文件<code>language</code>值为<code>zh-CN</code>。</li></ul><h3 id="Matery-插件配置"><a href="#Matery-插件配置" class="headerlink" title="Matery 插件配置"></a>Matery 插件配置</h3><h4 id="Matery-代码高亮插件"><a href="#Matery-代码高亮插件" class="headerlink" title="Matery 代码高亮插件"></a>Matery 代码高亮插件</h4><p>使用主题默认自带的代码高亮插件，在博客根目录配置文件<code>_config.yml</code>中修改配置信息：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span></code></pre><h4 id="Matery-博客内容搜索插件"><a href="#Matery-博客内容搜索插件" class="headerlink" title="Matery 博客内容搜索插件"></a>Matery 博客内容搜索插件</h4><p>使用<code>hexo-generator-search</code>插件，执行命令<code>npm install hexo-generator-search --save</code>，在博客根目录配置文件<code>_config.yml</code>中新增配置信息：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h4 id="Matery-中文链接转拼音插件"><a href="#Matery-中文链接转拼音插件" class="headerlink" title="Matery 中文链接转拼音插件"></a>Matery 中文链接转拼音插件</h4><p>使用<code>hexo-permalink-pinyin</code>插件，执行命令<code>npm i hexo-permalink-pinyin --save</code>，在博客根目录配置文件<code>_config.yml</code>中新增配置信息：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span></code></pre><h4 id="Matery-文章字数统计插件"><a href="#Matery-文章字数统计插件" class="headerlink" title="Matery 文章字数统计插件"></a>Matery 文章字数统计插件</h4><p>使用<code>hexo-wordcount</code>插件，执行命令<code>npm i --save hexo-wordcount</code>，在主题Matery目录下的配置文件<code>_config.yml</code>中激活配置信息：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">wordCount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 将这个值设置为 true 即可.</span>  <span class="token key atrule">postWordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p>添加 RSS 订阅支持</p><h4 id="Matery-RSS-订阅支持插件"><a href="#Matery-RSS-订阅支持插件" class="headerlink" title="Matery RSS 订阅支持插件"></a>Matery RSS 订阅支持插件</h4><p>使用<code>hexo-generator-feed</code>插件，执行命令<code>npm install hexo-generator-feed --save</code>，在博客根目录下的配置文件<code>_config.yml</code>中新增配置信息：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行<code>hexo clean &amp;&amp; hexo g</code>重新生成博客文件，然后在 public 文件夹中即可看到<code>atom.xml</code>文件，说明已经安装成功了。</p><h3 id="Matery-菜单配置"><a href="#Matery-菜单配置" class="headerlink" title="Matery 菜单配置"></a>Matery 菜单配置</h3><p>Matery默认实现了很多默认菜单样式，包括<code>文章分类</code>，<code>文章标签</code>、<code>画廊相册</code>、<code>关于作者</code>、<code>音乐</code>，<code>影片</code>，<code>友情链接</code>等菜单，更多其它样式可在<code>Matery</code>主题目录的<code>layout</code>文件夹中查看。使用者可以自由拓展自己想要的菜单，也可以对这些默认菜单的样式进行调整，下面是一些默认菜单的配置。</p><p>配置菜单前请先在主题目录的配置文件<code>_config.yml</code>中添加菜单路径和图标。</p><h4 id="Matery-文章标签"><a href="#Matery-文章标签" class="headerlink" title="Matery 文章标签"></a>Matery 文章标签</h4><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>在博客根目录<code>/source/tags</code>下，<code>index.md</code>文件加上如下信息</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-02 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h4 id="Matery-文章分类"><a href="#Matery-文章分类" class="headerlink" title="Matery 文章分类"></a>Matery 文章分类</h4><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>在博客根目录<code>/source/categories</code>下，<code>index.md</code>文件加上如下信息</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-02 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h4 id="Matery-文章归档"><a href="#Matery-文章归档" class="headerlink" title="Matery 文章归档"></a>Matery 文章归档</h4><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"archives"</span></code></pre><p>在博客根目录<code>/source/archives</code>下，<code>index.md</code>文件加上如下信息</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> archives<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-02 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"archives"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"archives"</span><span class="token punctuation">---</span></code></pre><h4 id="Matery-关于作者"><a href="#Matery-关于作者" class="headerlink" title="Matery 关于作者"></a>Matery 关于作者</h4><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>在博客根目录<code>/source/about</code>下，<code>index.md</code>文件加上如下信息</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-02 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span></code></pre><h4 id="Matery-联系方式"><a href="#Matery-联系方式" class="headerlink" title="Matery 联系方式"></a>Matery 联系方式</h4><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"archives"</span></code></pre><p>在博客根目录<code>/source/archives</code>下，<code>index.md</code>文件加上如下信息</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> archives<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-02 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"archives"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"archives"</span><span class="token punctuation">---</span></code></pre><h4 id="Matery-友情链接"><a href="#Matery-友情链接" class="headerlink" title="Matery 友情链接"></a>Matery 友情链接</h4><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>在博客根目录<code>/source/friends</code>下，<code>index.md</code>文件加上如下信息</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-02 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><h3 id="Matery-文章配置"><a href="#Matery-文章配置" class="headerlink" title="Matery 文章配置"></a>Matery 文章配置</h3><p>Front-matter 选项中的所有内容均为非必填的。建议至少填写<code>title</code>和<code>date</code>的值。</p><table><thead><tr><th align="left">配置选项</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left"><code>Markdown</code> 的文件标题</td><td align="left">文章标题，强烈建议填写此选项</td></tr><tr><td align="left">date</td><td align="left">文件创建时的日期时间</td><td align="left">发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td align="left">author</td><td align="left">根 <code>_config.yml</code> 中的 <code>author</code></td><td align="left">文章作者</td></tr><tr><td align="left">img</td><td align="left"><code>featureImages</code> 中的某个值</td><td align="left">文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td align="left">top</td><td align="left"><code>true</code></td><td align="left">推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td align="left">cover</td><td align="left"><code>false</code></td><td align="left"><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="left">coverImg</td><td align="left">无</td><td align="left"><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="left">password</td><td align="left">无</td><td align="left">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td align="left">toc</td><td align="left"><code>true</code></td><td align="left">是否开启<code>TOC</code>，可以针对某篇文章单独关闭 <code>TOC</code> 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td align="left">mathjax</td><td align="left"><code>false</code></td><td align="left">是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td align="left">summary</td><td align="left">无</td><td align="left">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="left">categories</td><td align="left">无</td><td align="left">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="left">tags</td><td align="left">无</td><td align="left">文章标签，一篇文章可以多个标签</td></tr></tbody></table><h4 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h4><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> Hexo Matery 建站<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-02 00:00:00</span><span class="token punctuation">---</span></code></pre><h4 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h4><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> Hexo Matery 建站<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-02 00:00:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 涂飞<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre><h3 id="Matery-其它配置"><a href="#Matery-其它配置" class="headerlink" title="Matery 其它配置"></a>Matery 其它配置</h3><h4 id="页脚修改"><a href="#页脚修改" class="headerlink" title="页脚修改"></a>页脚修改</h4><p>在主题文件的<code>/layout/_partial/footer.ejs</code>文件中，包括站点、使用的主题、访问量。</p><h4 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h4><p>在主题配置文件中，默认支持<code>QQ</code>、<code>GitHub</code>和<code>Email</code>等的配置，可在主题文件的<code>/layout/_partial/social-link.ejs</code>文件中新增、修改社交链接地址，增加链接参考如下代码：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github.com/blinkfox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>其中，社交图标（如：fa-github）可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。</p><h4 id="打赏二维码"><a href="#打赏二维码" class="headerlink" title="打赏二维码"></a>打赏二维码</h4><p>在主题文件的<code>source/medias/reward</code>文件中。</p><h4 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h4><p>在<code>Matery</code>主题配置文件<code>_config.yml</code>中：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token comment">#非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">autoHide</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment"># hide automaticaly</span>  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment">#requiremusic platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment">#require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">503838841</span>     <span class="token comment">#requiresong id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>       <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#white'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span>  <span class="token key atrule">hideLrc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>     <span class="token comment"># 隐藏歌词</span><span class="token comment"># Whether to display the musics.</span><span class="token comment"># 单独的音乐页面.</span><span class="token key atrule">musics</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>          <span class="token comment">#非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> tencent   <span class="token comment">#require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment">#require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">1776127550</span>     <span class="token comment">#require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token string">"525px"</span> <span class="token comment">#列表最大高度</span></code></pre><h4 id="视频播放器"><a href="#视频播放器" class="headerlink" title="视频播放器"></a>视频播放器</h4><p>在<code>Matery</code>主题配置文件<code>_config.yml</code>中：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Whether to display the videos.</span><span class="token comment"># 是否在首页显示视频.</span><span class="token key atrule">video</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 精彩视频  <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token comment"># url和iframeUrl其中一个必填</span>  <span class="token key atrule">iframeUrl</span><span class="token punctuation">:</span> //player.bilibili.com/player.html<span class="token punctuation">?</span>aid=669520137<span class="token important">&amp;bvid=BV1oa4y1L7mw&amp;cid=234543483&amp;page=1</span>  <span class="token key atrule">pic</span><span class="token punctuation">:</span>  <span class="token key atrule">thumbnails</span><span class="token punctuation">:</span>  <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">850</span> <span class="token comment"># 如：400</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 是否循环播放</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span> <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span></code></pre><h4 id="更多其它配置"><a href="#更多其它配置" class="headerlink" title="更多其它配置"></a>更多其它配置</h4><ul><li>1、可在<code>Matery</code>主题配置文件<code>_config.yml</code>中探索</li><li>2、主题作者对<code>Matery</code>主题的介绍：<a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">闪烁之狐</a></li></ul><h3 id="Matery-效果截图"><a href="#Matery-效果截图" class="headerlink" title="Matery 效果截图"></a>Matery 效果截图</h3><p>在博客根目录<code>/source/_post</code>下<code>hello-world.md</code>中添加</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">categories</span><span class="token punctuation">:</span> <span class="token string">"Hexo"</span><span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token string">"Hexo"</span></code></pre><p>在博客根目录下添加文件<code>/source/_data/friends.json</code>，写上如下内容</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span></code></pre><p><img src="/images/hexo/Hexo-Tips.png" alt="标签"><br><img src="/images/hexo/Hexo-Categories.png" alt="分类"><br><img src="/images/hexo/Hexo-About.png" alt="关于"><br><img src="/images/hexo/Hexo-Post.png" alt="归档"><br><img src="/images/hexo/Hexo-Friends.png" alt="友链"></p><h2 id="Matery-个性化配置"><a href="#Matery-个性化配置" class="headerlink" title="Matery 个性化配置"></a>Matery 个性化配置</h2><h3 id="Matery-画廊相册改造"><a href="#Matery-画廊相册改造" class="headerlink" title="Matery 画廊相册改造"></a>Matery 画廊相册改造</h3><p>由于原主题的画廊相册的样式我并不是很喜欢，但是在原主题的关于页面下方有一个相册的样式我比较喜欢<br><img src="/images/hexo/Hexo-Gallery.png" alt="Matery my-gallery 样式"><br>不知道为什么作者并没有统一起来。鉴于此，才有我基于<code>my-gallery</code>样式进行魔改的画廊相册页面<br><img src="/images/hexo/TF-Gallery.png" alt="画廊（相册封面）"><br><img src="/images/hexo/TF-Galleries.png" alt="画廊（相册图片）"></p><h4 id="新建画廊相册二级菜单"><a href="#新建画廊相册二级菜单" class="headerlink" title="新建画廊相册二级菜单"></a>新建画廊相册二级菜单</h4><h4 id="画廊（相册封面）页面改造"><a href="#画廊（相册封面）页面改造" class="headerlink" title="画廊（相册封面）页面改造"></a>画廊（相册封面）页面改造</h4><h4 id="画廊（相册图片）页面改造"><a href="#画廊（相册图片）页面改造" class="headerlink" title="画廊（相册图片）页面改造"></a>画廊（相册图片）页面改造</h4><h3 id="Matery-图书阅读笔记"><a href="#Matery-图书阅读笔记" class="headerlink" title="Matery 图书阅读笔记"></a>Matery 图书阅读笔记</h3><p>由于自己想做一个单独的图书阅读记录，类似于相册分为两个页面，首先是自己阅读过的图书的封面列表展示和关于图书的简单介绍页面，然后点击封面可以进入图书阅读笔记页面，该页面的样式可与博客文章页面相似，该想法目前尚未落地实施。</p><h4 id="图书笔记列表封面样式"><a href="#图书笔记列表封面样式" class="headerlink" title="图书笔记列表封面样式"></a>图书笔记列表封面样式</h4><h4 id="图书笔记列表展示样式"><a href="#图书笔记列表展示样式" class="headerlink" title="图书笔记列表展示样式"></a>图书笔记列表展示样式</h4><h4 id="图书笔记内容样式"><a href="#图书笔记内容样式" class="headerlink" title="图书笔记内容样式"></a>图书笔记内容样式</h4><h2 id="Matery-问题记录"><a href="#Matery-问题记录" class="headerlink" title="Matery 问题记录"></a>Matery 问题记录</h2><h3 id="代码块特殊字符乱码问题"><a href="#代码块特殊字符乱码问题" class="headerlink" title="代码块特殊字符乱码问题"></a>代码块特殊字符乱码问题</h3><h3 id="404页面显示问题"><a href="#404页面显示问题" class="headerlink" title="404页面显示问题"></a>404页面显示问题</h3>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/01/hello-world/"/>
      <url>/2022/01/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
